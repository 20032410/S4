# Simple Makefile to avoid the Autotools hassle
# To build:
#   make -f Makefile.custom

# Notes:
# + These flags below assume you have downloaded Lua 5.1.5 to this
#   top level directory (so there is a directory named lua-5.1.5 here).
#   and that you have gone into it and built Lua (e.g.: cd lua-5.1.5; make linux)
# + We assume you have copied config.h.custom into config.h
# + On Mac OS, replace '-llapack -lblas' with '-framework vecLib'

CXX = g++
CC  = gcc

CFLAGS = -O0 -ggdb

# Without Lapack/BLAS
CPPFLAGS = -Isrc -Isrc/RNP -I/home/victor/code/lua-5.2.3/install/include -Isrc/kiss_fft
LIBS = -L/home/victor/code/lua-5.2.3/install/lib -llua -ldl -lm

# Plain
#CPPFLAGS = -Isrc -Isrc/RNP -Ilua-5.2.3/src -Isrc/kiss_fft -DHAVE_LAPACK -DHAVE_BLAS
#LIBS = -llapack -lblas -llua -Llua-5.2.3/src -ldl

# All bells and whistles
# Note that HAVE_UNISTD_H goes with HAVE_PTHREAD on Unix based systems
#CPPFLAGS = -Isrc -Isrc/RNP -Ilua-5.2.3/src -Isrc/kiss_fft -I/usr/include/suitesparse -DHAVE_LAPACK -DHAVE_BLAS -DHAVE_LIBCHOLMOD -DHAVE_UNISTD_H -DHAVE_LIBPTHREAD -DHAVE_LIBFFTW3
#LIBS = -llapack -lblas -llua -Llua-5.2.3/src -ldl -lcholmod -lamd -lcolamd -lcamd -lccolamd -lfftw3 -lpthread

##################### DO NOT EDIT BELOW THIS LINE #####################

SOURCES = \
  src/S4.cpp \
  src/rcwa.cpp \
  src/fmm/fmm_common.cpp \
  src/fmm/fmm_FFT.cpp \
  src/fmm/fmm_kottke.cpp \
  src/fmm/fmm_closed.cpp \
  src/fmm/fmm_PolBasisNV.cpp \
  src/fmm/fmm_PolBasisVL.cpp \
  src/fmm/fmm_PolBasisJones.cpp \
  src/fmm/fmm_experimental.cpp \
  src/fmm/fft_iface.cpp \
  src/pattern/pattern.c \
  src/pattern/intersection.c \
  src/pattern/predicates.c \
  src/numalloc.c \
  src/gsel.c \
  src/sort.c \
  src/kiss_fft/kiss_fft.c \
  src/kiss_fft/tools/kiss_fftnd.c \
  src/SpectrumSampler.c \
  src/cubature.c \
  src/Interpolator.c \
  src/convert.c \
  src/main_lua.c \
  src/RNP/Eigensystems.cpp

all: objdir objs link

link:
	$(CXX) obj/*.o -o S4 $(LIBS)

objs: \
	obj/Eigensystems.o \
	obj/main.o \
	obj/S4.o \
	obj/rcwa.o \
	obj/fmm_common.o \
	obj/fmm_FFT.o \
	obj/fmm_kottke.o \
	obj/fmm_closed.o \
	obj/fmm_PolBasisNV.o \
	obj/fmm_PolBasisVL.o \
	obj/fmm_PolBasisJones.o \
	obj/fmm_experimental.o \
	obj/fft_iface.o \
	obj/pattern.o \
	obj/intersection.o \
	obj/predicates.o \
	obj/numalloc.o \
	obj/gsel.o \
	obj/sort.o \
	obj/kiss_fft.o \
	obj/kiss_fftnd.o \
	obj/SpectrumSampler.o \
	obj/cubature.o \
	obj/Interpolator.o \
	obj/convert.o

obj/S4.o: src/S4.cpp
	$(CXX) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
obj/rcwa.o: src/rcwa.cpp
	$(CXX) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
obj/fmm_common.o: src/fmm/fmm_common.cpp
	$(CXX) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
obj/fmm_FFT.o: src/fmm/fmm_FFT.cpp
	$(CXX) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
obj/fmm_kottke.o: src/fmm/fmm_kottke.cpp
	$(CXX) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
obj/fmm_closed.o: src/fmm/fmm_closed.cpp
	$(CXX) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
obj/fmm_PolBasisNV.o: src/fmm/fmm_PolBasisNV.cpp
	$(CXX) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
obj/fmm_PolBasisVL.o: src/fmm/fmm_PolBasisVL.cpp
	$(CXX) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
obj/fmm_PolBasisJones.o: src/fmm/fmm_PolBasisJones.cpp
	$(CXX) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
obj/fmm_experimental.o: src/fmm/fmm_experimental.cpp
	$(CXX) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
obj/fft_iface.o: src/fmm/fft_iface.cpp
	$(CXX) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
obj/pattern.o: src/pattern/pattern.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
obj/intersection.o: src/pattern/intersection.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
obj/predicates.o: src/pattern/predicates.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
obj/numalloc.o: src/numalloc.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
obj/gsel.o: src/gsel.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
obj/sort.o: src/sort.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
obj/kiss_fft.o: src/kiss_fft/kiss_fft.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
obj/kiss_fftnd.o: src/kiss_fft/tools/kiss_fftnd.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
obj/SpectrumSampler.o: src/SpectrumSampler.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
obj/cubature.o: src/cubature.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
obj/Interpolator.o: src/Interpolator.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
obj/convert.o: src/convert.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
obj/main_lua.o: src/main_lua.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
obj/Eigensystems.o: src/RNP/Eigensystems.cpp
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@

objdir:
	mkdir -p obj

clean:
	rm -f obj/*.o S4
