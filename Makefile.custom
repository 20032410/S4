# Simple Makefile to avoid the Autotools hassle
# To build:
#   make -f Makefile.custom

# Notes:
# + We assume you have copied config.h.custom into config.h

# Set these to the flags needed to link against BLAS and Lapack.
#  If left blank, then performance may be very poor.
#  On Mac OS,
#   BLAS_LIB = -framework vecLib
#   LAPACK_LIB = -framework vecLib
#  On Debian, with reference BLAS and Lapack (slow)
#   BLAS_LIB = -lblas
#   LAPACK_LIB = -llapack
BLAS_LIB =
LAPACK_LIB =

# Specify the flags for Lua headers and libraries (only needed for Lua frontend)
#  On Debian,
#   LUA_INC = -I/usr/include/lua5.2
#   LUA_LIB = -llua5.2 -ldl -lm
LUA_INC = -I/home/victor/code/lua-5.2.3/install/include
LUA_LIB = -L/home/victor/code/lua-5.2.3/install/lib -llua -ldl -lm

# Typically if installed,
#  FFTW3_INC can be left empty
#  FFTW3_LIB = -lfftw3
FFTW3_INC =
FFTW3_LIB =

# Typically, these are both set to '-lpthread'
PTHREAD_INC = -lpthread
PTHREAD_LIB = -lpthread

# Typically if installed,
#  CHOLMOD_INC can be left empty
#  CHOLMOD_LIB = -lcholmod -lamd -lcolamd -lcamd -lccolamd
CHOLMOD_INC =
CHOLMOD_LIB =

# Specify the MPI library
MPI_LIB =

# Specify custom compilers if needed
CXX = g++
CC  = gcc

CFLAGS = -O0 -ggdb -fPIC

OBJDIR = ./build
LIBNAME = $(OBJDIR)/libS4.a

##################### DO NOT EDIT BELOW THIS LINE #####################

#### Set the compilation flags

CPPFLAGS = -Isrc -Isrc/RNP -Isrc/kiss_fft

ifdef BLAS_LIB
CPPFLAGS += -DHAVE_BLAS
endif

ifdef LAPACK_LIB
CPPFLAGS += -DHAVE_LAPACK
endif

ifdef FFTW3_LIB
CPPFLAGS += -DHAVE_FFTW3
endif

ifdef PTHREAD_LIB
CPPFLAGS += -DHAVE_LIBPTHREAD
endif

ifdef CHOLMOD_LIB
CPPFLAGS += -DHAVE_LIBCHOLMOD
endif

ifdef MPI_LIB
CPPFLAGS += -DHAVE_MPI
endif

#### Compilation targets

all: lib

objdir:
	mkdir -p $(OBJDIR)

LIBOBJS = \
	$(OBJDIR)/S4.o \
	$(OBJDIR)/rcwa.o \
	$(OBJDIR)/fmm_common.o \
	$(OBJDIR)/fmm_FFT.o \
	$(OBJDIR)/fmm_kottke.o \
	$(OBJDIR)/fmm_closed.o \
	$(OBJDIR)/fmm_PolBasisNV.o \
	$(OBJDIR)/fmm_PolBasisVL.o \
	$(OBJDIR)/fmm_PolBasisJones.o \
	$(OBJDIR)/fmm_experimental.o \
	$(OBJDIR)/fft_iface.o \
	$(OBJDIR)/pattern.o \
	$(OBJDIR)/intersection.o \
	$(OBJDIR)/predicates.o \
	$(OBJDIR)/numalloc.o \
	$(OBJDIR)/gsel.o \
	$(OBJDIR)/sort.o \
	$(OBJDIR)/kiss_fft.o \
	$(OBJDIR)/kiss_fftnd.o \
	$(OBJDIR)/SpectrumSampler.o \
	$(OBJDIR)/cubature.o \
	$(OBJDIR)/Interpolator.o \
	$(OBJDIR)/convert.o

ifndef LAPACK_LIB
  LIBOBJS += $(OBJDIR)/Eigensystems.o
endif

lib: $(LIBNAME)

$(LIBNAME): $(LIBOBJS)
	$(AR) crvs $@ $(LIBOBJS)

$(OBJDIR)/S4.o: src/S4.cpp
	$(CXX) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/rcwa.o: src/rcwa.cpp
	$(CXX) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/fmm_common.o: src/fmm/fmm_common.cpp
	$(CXX) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/fmm_FFT.o: src/fmm/fmm_FFT.cpp
	$(CXX) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/fmm_kottke.o: src/fmm/fmm_kottke.cpp
	$(CXX) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/fmm_closed.o: src/fmm/fmm_closed.cpp
	$(CXX) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/fmm_PolBasisNV.o: src/fmm/fmm_PolBasisNV.cpp
	$(CXX) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/fmm_PolBasisVL.o: src/fmm/fmm_PolBasisVL.cpp
	$(CXX) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/fmm_PolBasisJones.o: src/fmm/fmm_PolBasisJones.cpp
	$(CXX) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/fmm_experimental.o: src/fmm/fmm_experimental.cpp
	$(CXX) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/fft_iface.o: src/fmm/fft_iface.cpp
	$(CXX) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/pattern.o: src/pattern/pattern.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/intersection.o: src/pattern/intersection.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/predicates.o: src/pattern/predicates.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/numalloc.o: src/numalloc.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/gsel.o: src/gsel.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/sort.o: src/sort.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/kiss_fft.o: src/kiss_fft/kiss_fft.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/kiss_fftnd.o: src/kiss_fft/tools/kiss_fftnd.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/SpectrumSampler.o: src/SpectrumSampler.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/cubature.o: src/cubature.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/Interpolator.o: src/Interpolator.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/convert.o: src/convert.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
$(OBJDIR)/Eigensystems.o: src/RNP/Eigensystems.cpp
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@

#### Lua Frontend
	
$(OBJDIR)/main_lua.o: src/main_lua.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
S4lua:  $(OBJDIR)/main_lua.o $(LIBNAME)
	$(CXX) $(CFLAGS) $(CPPFLAGS) $< -o $@ $(LIBNAME) $(LIBS)


clean:
	rm -f $(OBJDIR)/*.o S4
